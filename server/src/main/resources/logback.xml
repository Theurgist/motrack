<configuration debug="false" scan="true" scanPeriod="30 seconds">
    <!-- ALL, TRACE, DEBUG, INFO, WARN, ERROR or OFF -->
    <!-- Pattern sting format description: http://logback.qos.ch/manual/layouts.html -->
    <!-- immediateFlush as false quadruples logging throughput for file logger -->

    <conversionRule conversionWord="lvlclrz" converterClass="cc.theurgist.motrack.server.FineLogbackLevelColorizer" />

    <property name="LOGS_ROOT" value="logs" />
    <property name="LOG_BASE_NAME" value="${project.build.finalName}" />
    <property name="LOG_BASE_EXTENSION" value="log" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <immediateFlush>true</immediateFlush>

        <encoder>
            <pattern>üïë %d{HH:mm:ss.SSS/zzz} üì∂ %lvlclrz(%-5level) üîå %-10.10t üçµ %-3L:%-30.30c{1.} üóé %lvlclrz(%m%n)</pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>

    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS_ROOT}/${LOG_BASE_NAME}.log</file>
        <append>true</append>
        <immediateFlush>false</immediateFlush>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_ROOT}/%d{yyyy/MM, aux}/${LOG_BASE_NAME}-%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <!--<maxFileSize>200MB</maxFileSize>-->
            <!--<totalSizeCap>2GB</totalSizeCap>-->
        </rollingPolicy>

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS/zzz} | %-5level | %-50class{140} >> %msg%n</pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <appender name="COLORED_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS_ROOT}/${LOG_BASE_NAME}-colored.log</file>
        <append>true</append>
        <immediateFlush>false</immediateFlush>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_ROOT}/%d{yyyy/MM, aux}/${LOG_BASE_NAME}-%d{yyyy-MM-dd}-colored.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <!--<maxFileSize>100MB</maxFileSize>-->
            <!--<totalSizeCap>1GB</totalSizeCap>-->
        </rollingPolicy>

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} | %boldWhite(%-5level) | %cyan(%-20class{120}) >> %yellow(%msg%n)</pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="COLORED_FILE" />
    </root>

    <logger level="WARN" name="io.netty"/>
    <logger level="WARN" name="org.flywaydb"/>
    <logger level="WARN" name="com.zaxxer"/>

</configuration>
